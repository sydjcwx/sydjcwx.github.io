<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>殇夜</title>
  
  <subtitle>技术杂谈</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-02T06:45:14.942Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>sydjcwx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>windown 64位系统下安装Python环境、Pycharm编辑器、selenium自动化</title>
    <link href="http://yoursite.com/2020/01/02/windown%2064%E4%BD%8D%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85Python%E7%8E%AF%E5%A2%83%E3%80%81Pycharm%E7%BC%96%E8%BE%91%E5%99%A8%E3%80%81selenium%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://yoursite.com/2020/01/02/windown 64位系统下安装Python环境、Pycharm编辑器、selenium自动化/</id>
    <published>2020-01-02T06:45:49.094Z</published>
    <updated>2020-01-02T06:45:14.942Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Python环境"><a href="#安装Python环境" class="headerlink" title="安装Python环境"></a>安装Python环境</h2><p><strong>下载python安装包：</strong><br>官网地址：<a href="https://www.python.org/downloads/release/python-381/" target="_blank" rel="noopener">python3.8.1</a><br>百度网盘地址：<a href="https://pan.baidu.com/s/1HCf-CrThy-PYV3KJJxIA0Q" target="_blank" rel="noopener">python3.6.5</a><br>建议用python3.6.5，比较稳定<br>下载好之后，直接点击安装包即可<br><img src="https://img-blog.csdnimg.cn/20200102095928757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="第一步：找到安装包"><br><img src="https://img-blog.csdnimg.cn/20200102100649375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102100832612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102101156283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102101228375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102101522432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="安装Pycharm编辑器"><a href="#安装Pycharm编辑器" class="headerlink" title="安装Pycharm编辑器"></a>安装Pycharm编辑器</h2><p><strong>下载安装包：</strong><br>官网地址：<a href="http://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener">pycharm安装包</a><br>百度网盘地址：<a href="%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://pan.baidu.com/s/141iJ-INDNpu6xctkcvdjcQ">pycharm安装包</a>     —&gt; 提取码：6f9p<br>找到pycharm安装包，直接点击安装<br><img src="https://img-blog.csdnimg.cn/20200102113840162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102114230349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102114415790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102114739452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102115627560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200102115703488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020010211574542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>安装完成后，不要运行，直接在pycharm安装文件夹下装破解包</strong></p><ol><li>将JetbrainsCrack-3.1-release-enc.jar文件复制粘贴到pycharm安装文件夹下的bin文件夹下<br><img src="https://img-blog.csdnimg.cn/2020010213483089.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></li><li>找到bin文件夹下的<br>pycharm.exe.vmoptions和pycharm64.exe.vmoptions ，分别用记事本打开，然后在下边添加 -javaagent:D:\Program Files\JetBrains\PyCharm 2018.2.4\bin\JetbrainsCrack-3.1-release-enc.jar  （注意，要换成自己的pycharm路径，添加好之后CTRL+s保存一下）<br><img src="https://img-blog.csdnimg.cn/20200102135710407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></li><li>在 C:\Windows\System32\drivers\etc 下找到 hosts 文件，用记事本打开，最下边添加 0.0.0.0 account.jetbrains.com，然后保存一下<br><img src="https://img-blog.csdnimg.cn/20200102140247973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></li><li>重启 pycharm</li></ol><h2 id="selenium自动化"><a href="#selenium自动化" class="headerlink" title="selenium自动化"></a>selenium自动化</h2><p>浏览器下载：<a href="https://pan.baidu.com/s/16kXNcr_xZtQaqglhyI3M_g" target="_blank" rel="noopener">火狐和谷歌</a><br>驱动下载：<a href="https://pan.baidu.com/s/1948Q_MURljSA-hWm5UG0cQ" target="_blank" rel="noopener">火狐和谷歌 驱动</a><br>1.下载后，先安装好浏览器，将chromedriver.exe , geckodriver.exe , Iedriver.exe发到Python的安装目录的Scripts文件夹下（注意：浏览器最好不要升级，浏览器版本和驱动版本有对应关系，版本不对应，不能使用）<br>2.进入pycharm，新建个py文件，在py文件里 直接写 import selenium ，如果报红，说明没用selenium模块，此时，鼠标指在 selenium 上，点击一下，让光标在 selenium 几个字母中间闪烁，再按 ALT+ENTER 键，弹出选项框，直接点击第一个 install 安装，就会开始自动安装，安装完成后，红线会消失<br>3. 启动方式： <a href="https://www.cnblogs.com/QYGQH/p/7635906.html" target="_blank" rel="noopener">启动方式</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装Python环境&quot;&gt;&lt;a href=&quot;#安装Python环境&quot; class=&quot;headerlink&quot; title=&quot;安装Python环境&quot;&gt;&lt;/a&gt;安装Python环境&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;下载python安装包：&lt;/strong&gt;&lt;br&gt;官网地址：
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>win10家庭版安装docker和splash</title>
    <link href="http://yoursite.com/2019/11/11/win10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%AE%89%E8%A3%85docker%E5%92%8Csplash/"/>
    <id>http://yoursite.com/2019/11/11/win10家庭版安装docker和splash/</id>
    <published>2019-11-11T06:02:08.866Z</published>
    <updated>2019-11-11T06:00:44.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><p>docker下载地址：阿里云镜像 <a href="http://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/" target="_blank" rel="noopener">http://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/</a><br>选择：<br><img src="https://img-blog.csdnimg.cn/20191111112833228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>Docker 分为 CE 和 EE 两大版本。CE 即社区版，EE 即企业版，强调安全，付费使用。<br>下载完成后直接点击安装，每步都选择默认安装就行，安装完成后会出现<br><img src="https://img-blog.csdnimg.cn/2019111111304623.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>双击Docker Quickstart Terminal运行。成功的话会直接进入<br><img src="https://img-blog.csdnimg.cn/20191111113246986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>如果提示 目标，浏览啥的，关闭弹出的窗口后，右键Docker Quickstart Terminal图标，选择属性，修改目标，把git地址换成自己的git地址，因为默认安装会安装git到c盘，如果之前装过git，就会出现此问题。<br><img src="https://img-blog.csdnimg.cn/20191111113642843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>更改好后保存，并再次双击Docker Quickstart Terminal运行，会进入安装界面，比如上上图所示，安装成功后，会显示<br><img src="https://img-blog.csdnimg.cn/20191111113751861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>配置镜像加速器</strong><br>待写</p><p><strong>docker命令：</strong></p><ol><li><p>docker version<br>显示 Docker 版本信息。</p></li><li><p>docker info<br>显示 Docker 系统信息，包括镜像和容器数。</p></li><li><p>docker images<br>docker images [options “o”&gt;] [name]<br>列出本地所有镜像。其中 [name] 对镜像名称进行关键词查询。 </p></li><li><p>docker ps<br>列出所有运行中容器。 </p></li></ol><p>-a 列出所有容器（含沉睡镜像）；</p><ol start="5"><li>docker rm</li></ol><h2 id="安装splash"><a href="#安装splash" class="headerlink" title="安装splash"></a>安装splash</h2><p><strong>注意：安装splash必须先安装好docker</strong></p><p>docker pull scrapinghub/splash</p><p>启动splash<br>docker run -p 8050:8050 scrapinghub/splash</p><p>自动重启splash<br>docker run -d –restart always -p 8050:8050 scrapinghub/splash</p><p><strong>安装成功</strong><br>先启动splash，然后可以本地访问127.0.0.1：8050<br><img src="https://img-blog.csdnimg.cn/20191111135958692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>注意如果127.0.0.1：8050打不开的话，请查看Docker Quickstart Terminal成功运行的图示（即本文第5张图片）中的 ip，换成此ip打开即可，以下为成功访问图示<br><img src="https://img-blog.csdnimg.cn/20191111135344899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191111135731543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191111135741934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;docker安装&quot;&gt;&lt;a href=&quot;#docker安装&quot; class=&quot;headerlink&quot; title=&quot;docker安装&quot;&gt;&lt;/a&gt;docker安装&lt;/h2&gt;&lt;p&gt;docker下载地址：阿里云镜像 &lt;a href=&quot;http://mirrors.aliyu
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>python代码查询数据库数据表的所有字段和对应注释</title>
    <link href="http://yoursite.com/2019/11/07/python%E4%BB%A3%E7%A0%81%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E6%AE%B5%E5%92%8C%E5%AF%B9%E5%BA%94%E6%B3%A8%E9%87%8A/"/>
    <id>http://yoursite.com/2019/11/07/python代码查询数据库数据表的所有字段和对应注释/</id>
    <published>2019-11-07T10:35:16.479Z</published>
    <updated>2019-11-07T10:35:00.986Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mysql_zi_duan</span><span class="params">()</span>:</span></span><br><span class="line">    conn = pymysql.connect(host=<span class="string">'192.16.00.0'</span>, port=<span class="number">3306</span>, user=<span class="string">'h'</span>, passwd=<span class="string">'xi'</span>, db=<span class="string">'db_x'</span>, charset=<span class="string">'utf8'</span>)</span><br><span class="line">    cursor01 = conn.cursor()</span><br><span class="line">    cursor01.execute(</span><br><span class="line">        <span class="string">"select column_name, column_comment from information_schema.columns where table_schema ='db_x' and table_name = 'api_lingo_all_data'"</span>)</span><br><span class="line">    all_info = cursor01.fetchall()  <span class="comment"># 数据库字段名和注释</span></span><br><span class="line">    print(all_info)</span><br><span class="line">    zi_duan_ming = []</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> all_info:</span><br><span class="line">        zi_duan_ming.append(data[<span class="number">0</span>])</span><br><span class="line">    print(str(zi_duan_ming).replace(<span class="string">'['</span>,<span class="string">''</span>).replace(<span class="string">']'</span>,<span class="string">''</span>))</span><br><span class="line"> </span><br><span class="line">    cursor01.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 获取一个表的 所有字段名</span></span><br><span class="line">    get_mysql_zi_duan()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>nodejs+hexo+gihub 搭建自己的博客</title>
    <link href="http://yoursite.com/2019/11/06/nodejs+hexo+gihub%20%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/11/06/nodejs+hexo+gihub 搭建自己的博客/</id>
    <published>2019-11-06T03:52:44.525Z</published>
    <updated>2019-11-06T03:53:41.859Z</updated>
    
    <content type="html"><![CDATA[<p>环境：win10</p><h2 id="1-安装配置nodejs"><a href="#1-安装配置nodejs" class="headerlink" title="1. 安装配置nodejs"></a><strong>1. 安装配置nodejs</strong></h2><p>首先下载好nodejs<br>官网地址： <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br>下载LTS版， .msi结尾的安装包<br>双击此安装包，一路点击next，直至安装完成。<br>默认会安装到 C:\Program Files\nodejs 下，并且会自动添加环境变量。<br>安装完成之后，进入cmd命令行，输入node -v 和 npm -v，会出现对应的版本号，即为成功。如图：<br><img src="https://img-blog.csdnimg.cn/20191106103734445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>如果选择默认安装路径，以后下载模块依赖的话也会存到c盘，为避免占用c盘空间，可以进行如下操作：<br>在d盘创建nodejsFiles文件见，进入此文件夹，再创建两个文件夹：node_cache和node_global。<br>如图:<br><img src="https://img-blog.csdnimg.cn/20191106104808965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>创建好后还需要配置环境变量，右键我的电脑，高级系统设置&gt;环境变量&gt;系统变量，点击新建，变量名：NODE_PATH, 变量值：D:\nodejsFiles, 然后再找到path变量名，点击编辑，新建 %NODE_PATH% ，添加好后一路点击确定。最后path里会显示<br><img src="https://img-blog.csdnimg.cn/20191106105321519.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>最后设置更改模块和缓存安装路径：<br>设置全局路径，在cmd中输入：<br>npm config set prefix “D:\nodejs\node_global”<br>npm config set cache “D:\nodejs\node_cache”<br>注意：根据自己的文件输入相应的路径</p><h2 id="2-安装github"><a href="#2-安装github" class="headerlink" title="2. 安装github"></a><strong>2. 安装github</strong></h2><p>下载地址：<a href="https://pc.qq.com/detail/13/detail_22693.html" target="_blank" rel="noopener">https://pc.qq.com/detail/13/detail_22693.html</a><br>腾讯软件中心直接搜索git 下载，这个下载速度比官网快很多。<br>可以选择默认安装和自定义安装，本人选择自定义安装，<br>安装过程如图：（供参考）<br><img src="https://img-blog.csdnimg.cn/20191106111024264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111041780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111201200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111215977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111233535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111245538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111258113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111313444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106111325118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>安装完成之后桌面上会显示<br><img src="https://img-blog.csdnimg.cn/2019110611143091.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>点击打开 Git Bash，或者 鼠标右键 Git Bash Here, 输入命令：git –version, 会显示版本号<br><img src="https://img-blog.csdnimg.cn/20191106111612639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>配置ssh 用于远程登录github</strong><br>参考</p><ol><li>打开Git Bash，静茹命令行，输入 cd ~/.ssh, 出现下图，说明需要配置ssh<br><img src="https://img-blog.csdnimg.cn/20191106112017107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></li><li>新建ssh key<br>输入 ssh-keygen -t rsa -C “（邮箱名字）”<br><img src="https://img-blog.csdnimg.cn/20191106113009645.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></li><li>会提示你key保存的路径，然后提示你输入密码，直接按两次enter就行，生成成功会显示</li></ol><p><img src="https://img-blog.csdnimg.cn/20191106113147533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>4. 进入到key保存的文件夹下，会有id_rsa和id_rsa.pub（生成的 id_rsa 以及 id_rsa.pub，前者是私钥最好不要泄露，后者是公钥可以告诉别人。）<br>5. 打开 id_rsa.pub，复制里边的内容后，打开guthub网站，登陆上账号，点击右上角自己的小图标，选择设置，选择 SSH and GPG keys，New SSH key， 自己起个名字，然后把复制的内容添加进去， 欧克了。<br><img src="https://img-blog.csdnimg.cn/2019110611442682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>6. 测试一波<br>7. <img src="https://img-blog.csdnimg.cn/20191106114447577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><p>参考： <a href="https://blog.csdn.net/wh211212/article/details/75004199" target="_blank" rel="noopener">https://blog.csdn.net/wh211212/article/details/75004199</a></p><p>安装过程中遇到的错误：</p><p>$ hexo d<br>INFO  Deploying: git<br>INFO  Clearing .deploy_git folder…<br>INFO  Copying files from public folder…<br>INFO  Copying files from extend dirs…<br>warning: LF will be replaced by CRLF in 2018/01/05/hello-world/index.html.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in archives/2018/01/index.html.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in archives/2018/index.html.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in archives/index.html.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in css/style.css.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons                                                                                                                                  .css.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons                                                                                                                                  .js.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-media.j                                                                                                                                  s.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.                                                                                                                                  css.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.                                                                                                                                  js.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.css.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.js.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.pack.js.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in index.html.<br>The file will have its original line endings in your working directory.<br>warning: LF will be replaced by CRLF in js/script.js.<br>The file will have its original line endings in your working directory.</p><p>*** Please tell me who you are.</p><p>Run</p><p>  git config –global user.email “<a href="mailto:you@example.com" target="_blank" rel="noopener">you@example.com</a>“<br>  git config –global user.name “Your Name”</p><p>to set your account’s default identity.<br>Omit –global to set the identity only in this repository.</p><p>fatal: unable to auto-detect email address (got ‘Alex@DESKTOP-I33C9K5.(none)’)<br>error: src refspec HEAD does not match any.<br>error: failed to push some refs to ‘git@github.com:alexsaurora/alexsaurora.githu                                                                                                                                  b.io.git’<br>FATAL Something’s wrong. Maybe you can find the solution here: <a href="http://hexo.io/do" target="_blank" rel="noopener">http://hexo.io/do</a>                                                                                                                                  cs/troubleshooting.html<br>Error: error: src refspec HEAD does not match any.<br>error: failed to push some refs to ‘git@github.com:alexsaurora/alexsaurora.githu                                                                                                                                  b.io.git’</p><pre><code>at ChildProcess.&lt;anonymous&gt; (D:\Hexo\node_modules\hexo-util\lib\spawn.js:37:                                                                                                                                  17)at emitTwo (events.js:106:13)at ChildProcess.emit (events.js:191:7)at ChildProcess.cp.emit (D:\Hexo\node_modules\cross-spawn\lib\enoent.js:40:2                                                                                                                                  9)at maybeClose (internal/child_process.js:920:16)at Process.ChildProcess._handle.onexit (internal/child_process.js:230:5)</code></pre><p>解决方式：<br>按提示 Run 输入：<br> git config –global user.email “<a href="mailto:you@example.com" target="_blank" rel="noopener">you@example.com</a>“ # 自己github绑定的邮箱<br>  git config –global user.name “Your Name” # 自己github的昵称</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;环境：win10&lt;/p&gt;
&lt;h2 id=&quot;1-安装配置nodejs&quot;&gt;&lt;a href=&quot;#1-安装配置nodejs&quot; class=&quot;headerlink&quot; title=&quot;1. 安装配置nodejs&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 安装配置nodejs&lt;/strong&gt;&lt;/h
      
    
    </summary>
    
    
    
      <category term="环境搭建" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>软件测试之如何选择合适的正交表</title>
    <link href="http://yoursite.com/2019/11/05/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E4%B9%8B%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E6%AD%A3%E4%BA%A4%E8%A1%A8/"/>
    <id>http://yoursite.com/2019/11/05/软件测试之如何选择合适的正交表/</id>
    <published>2019-11-05T02:15:09.656Z</published>
    <updated>2019-11-05T06:22:44.355Z</updated>
    
    <content type="html"><![CDATA[<p><strong>需求：</strong><br>窗体中有多个控件（字体、字符样式、颜色、字号），<br>每个控件有多个取值<br>字体：仿宋、楷体、华文彩云<br>字符样式：粗体、斜体、下划线<br>颜色：红色、绿色、蓝色<br>字号：20号、30号、40号</p><p>如果按照正常步骤进行，需要 3<em>3</em>3*3=81 种组合，就需要写81个测试用例，显得比较多，针对这种组合量比较大的情况，如何采用最少的测试用例集合获得最大的测试覆盖率呢，就可以采用  正交排列法（—定义：正交排列法就是能够使用最小的测试过程集合获得最大的测试覆盖率。附：这是统计学的一个研究成果）。</p><p><strong>正交表的类别</strong><br>可分为：单一水平正交表 和 混合水平正交表。</p><p><strong>单一水平正交表</strong>：各列水平数相同的正交表称为等水平正交表。比如：L9 (3<strong>4) –&gt;（附：括号里意思为3的4次方，下同。）、L2 7(3</strong>13) 称为3水平正交表。 L4 (2<strong>3)、L8 （2</strong>7） 称为2水平正交表。单一水平正交表可以用 Ln(m<em>*k) 表示，n是行数，m是水平数，k是因数。比如上边需求示例：可以理解为4因数（字体，字符样式，颜色，字号），3水平（意思是每个因数里都有三个选项，比如：字体里有 仿宋、楷体、华文彩云 3个选择）。一般情况下，我们可以直接确定m和k，n 可以根据水平数和因数计算行数，公式为：n=k</em>(m-1)+1。</p><p><strong>混合水平正交表</strong>：各列水平数不完全相同的正交表称为混合水平正交表。比如：L8 （4<strong>1    2</strong>4）–&gt;（附：括号里意思为4的1次方 和 2的4次方。意思为表中共有8行，有一列的水平为4，有4列的水平为2。）。混合水平正交表可以用 Ln(m1<strong>k1    m2</strong>k2) 表示。一般情况下，我们可以直接确定m和k，n 可以根据水平数和因数计算行数，公式为：n=k1<em>(m1-1)+k2</em>(m2-1)+k3<em>(m3-1)……+ kx</em>(mx-1) + 1。</p><p><strong>查看正交表</strong><br><a href="http://support.sas.com/techsup/technote/ts723_Designs.txt" target="_blank" rel="noopener">http://support.sas.com/techsup/technote/ts723_Designs.txt</a></p><p><strong>如何选取合适的正交表</strong><br>假如我们确定有3因数2水平，计算n=3<em>(2-1)+1=4,应该表示为 L4(2*</em>3)，那么我们看看有木有和这个正好相等的正交表，如果有，那么把变量值复制进去这个表中，如果没有，按照如下方法选取：</p><ol><li><p>水平数相等，因数相等时，取行数刚好比自定义正交表略大的</p></li><li><p>水平数相等，因数不相等时，取行数刚好比自定义正交表略大的，因数刚好比自定义正交表略大的。比如：自定义为：                 L7(3<strong>3), 我们选取为 L9(3</strong>4), 套用之后，最后一列因素去掉</p></li><li><p>水平数不相等时，即：混合正交表。</p></li></ol><p><strong>例</strong>：</p><p>有五个因素（变量）：</p><p>　　A、B、C、D和E</p><p>　　两个因素有两个水平（变量的取值）、两个因素有三个水平，一个因素有六个水平：</p><p>　　A：A1、A2</p><p>　　B：B1、B2</p><p>　　C：C1、C2、C3</p><p>　　D：D1、D2、D3</p><p>　　E：E1、E2、E3、E4、E5、E6</p><p>自定义为：L11(2^2 3^2 5^1)</p><p>选择正交表：</p><pre><code>表中的因素数（变量）＞＝5</code></pre><p>　　表中至少有二个因素的水平数（变量的取值）＞＝2</p><p>　　至少有另外二个因素的水平数＞＝3</p><p>　　还至少有另外一个因素的水平数＞＝6</p><p>　　行数取最少的一个：L49(7^8)或者L18(3^6 6^1)）</p><p>结果：L18(3^6 6^1)<br><strong>例：</strong></p><p>m1=5   k1=5</p><p>m2=2   k2=1</p><p>n=22</p><p>自定义为：L22(5^5   2^1)</p><p>没有正好等于22的正交表，此时选择大于22并且满足m&gt;=max(m1=5, m2=2),   k&gt;=k1+k2=6 的正交表，查到有</p><p>L25(5^6)、L49(7^8) 都符合，选择行数少的，即：最终选择 L25(5^6)</p><p><strong>对于混合正交表</strong>，可以使用allpairs工具辅助我们进行选择。</p><p>allpairs工具使用：</p><p>1）制作取值表（不要编号） 因素和水平 （因素是一行 。。。。 ）</p><p>2）制作的取值表复制到一个txt文本中（不要改格式） user.txt</p><p>3）把txt文本放入allpairs工具的文件夹中</p><p>4）在文件夹中运行 cmd （我到达了这个文件夹下面）</p><p>4）在allpairs工具的文件夹路径下使用DOS命令：</p><p>allpairs.exe 建立的txt文本 &gt; 用例结果文本（可以不存在）</p><p>例：</p><p>​​<img src="https://img-blog.csdnimg.cn/20191105101046918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191105101103331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191105101113447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191105101127838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2wxMTU5MDE1ODM4,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;需求：&lt;/strong&gt;&lt;br&gt;窗体中有多个控件（字体、字符样式、颜色、字号），&lt;br&gt;每个控件有多个取值&lt;br&gt;字体：仿宋、楷体、华文彩云&lt;br&gt;字符样式：粗体、斜体、下划线&lt;br&gt;颜色：红色、绿色、蓝色&lt;br&gt;字号：20号、30号、40号&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>windows下创建Python虚拟环境</title>
    <link href="http://yoursite.com/2019/11/02/windows%E4%B8%8B%E5%88%9B%E5%BB%BAPython%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/11/02/windows下创建Python虚拟环境/</id>
    <published>2019-11-02T10:08:15.000Z</published>
    <updated>2019-11-02T14:21:45.984Z</updated>
    
    <content type="html"><![CDATA[<p>windows下创建Python虚拟环境<br>说明<br>由于Python的版本众多，还有Python2和Python3的争论，因此有些软件包或第三方库就容易出现版本不兼容的问题。</p><p>通过 virtualenv 这个工具，就可以构建一系列 虚拟的Python环境 ，然后在每个环境中安装需要的软件包(配合 pip 使用)，这一系列的环境是相互隔离的。作为一个独立的环境就不容易出现版本问题，还方便部署。</p><p>安装<br>pip install virtualenv</p><p>virtualenv的基本使用<br>1).创建虚拟环境</p><p>virtualenv venv</p><p>为环境指定Python解释器:</p><p>virtualenv -p c:\python27\python.exe venv</p><p>2).激活虚拟环境</p><p>activate venv</p><p>3).停止虚拟环境</p><p>deactivate</p><p>4).删除虚拟环境<br>直接删除目录即可.</p><p>rmvirtualenv venv　</p><p>virtualenvwrapper<br>为了使用virtualenv更方便，可以借助 virtualenvwrapper</p><p>1).安装virtualenvwrapper<br>pip install virtualenvwrapper-win</p><p>2).创建虚拟环境<br>默认创建的虚拟环境位于C:\Users\username\py3,可以通过环境变量 WORKON_HOME 来定制。</p><p>通过计算机–&gt;属性–&gt;高级系统设置–&gt;环境变量–&gt;在系统变量中新建“变量名”：WORKON_HOME,变量值：“你自定义的路径”。</p><p>创建后，会自动激活环境，注意看Shell提示符的改变:</p><p>(py3)c:&gt;</p><p>3).列出所有虚拟环境</p><p>lsvirtualenv</p><p>4).激活虚拟环境</p><p>workon venv　</p><p>5).进入虚拟环境目录<br>cdvirtualenv</p><p> 建议用 virtualenvwrapper （主要在切换的时候方便）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;windows下创建Python虚拟环境&lt;br&gt;说明&lt;br&gt;由于Python的版本众多，还有Python2和Python3的争论，因此有些软件包或第三方库就容易出现版本不兼容的问题。&lt;/p&gt;
&lt;p&gt;通过 virtualenv 这个工具，就可以构建一系列 虚拟的Python环
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog</title>
    <link href="http://yoursite.com/2019/11/01/hello-world/"/>
    <id>http://yoursite.com/2019/11/01/hello-world/</id>
    <published>2019-11-01T07:33:34.945Z</published>
    <updated>2019-11-05T03:45:43.324Z</updated>
    
    <content type="html"><![CDATA[<p><strong>My CSDN</strong> :   <a href="https://blog.csdn.net/l1159015838" target="_blank" rel="noopener">点击进入我的csdn博客</a></p><p><strong>My GitHub</strong> : <a href="https://github.com/sydjcwx" target="_blank" rel="noopener">点击进入我的GitHub</a></p><p><img src="https://img-blog.csdnimg.cn/20191105114355216.gif" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191105114409163.gif" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;My CSDN&lt;/strong&gt; :   &lt;a href=&quot;https://blog.csdn.net/l1159015838&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击进入我的csdn博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;M
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
